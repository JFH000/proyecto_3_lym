// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/NewFile.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class NewFile {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static GPushdownAutomaton M=null;
  static {
    int $line=0;
    $line=3;
    $try:try {
      M=$defaultValue(GPushdownAutomaton.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,NewFile.class,null,$line);
    }
  }
  public static Object chars(Object string) {
    int $line=0;
    Object $result=null;
    $try:try {
      gold.structures.set.ISet $v1=$newSet();
      int $v3=$int(0);
      int $v4=$int($invokeMethod("length",string,new Object[]{}))-1;
      $v2:for (int i_=$v3; i_<=$v4; i_++) {
        $v1.add($invokeMethod("charAt",string,new Object[]{i_}));
      }
      $result=$v1;
      if (true) break $try;
      $line=4;
      $rethrow(new RuntimeException("The function \"chars(string:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,NewFile.class,"chars",$line);
    }
    return $result;
  }
  public static Object elements(Object array) {
    int $line=0;
    Object $result=null;
    $try:try {
      gold.structures.set.ISet $v5=$newSet();
      int $v7=$int(0);
      int $v8=$int($opAbsolY(array))-1;
      $v6:for (int i_=$v7; i_<=$v8; i_++) {
        $v5.add($getArrayValue(array,new Object[]{i_}));
      }
      $result=$v5;
      if (true) break $try;
      $line=5;
      $rethrow(new RuntimeException("The function \"elements(array:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,NewFile.class,"elements",$line);
    }
    return $result;
  }
  public static Object strings=null;
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=10;
      java.util.Scanner sc=null;
      sc=$invokeConstructor(java.util.Scanner.class,new Object[]{$invokeField(System.class,"in",true,null)});
      $line=12;
      Object strings_0=$fix(GCollections.asSet("(Ff(v)(f(fv)n(*v(f(-vn)))))","(Ff(v)(=(fvn)n))","(Ff(vv)(f((fv)N)((fv(fv))S)(S(fv(fv)))))","(f(Lvvv)(Lvvv))","(Ff(v)(f(+fn)))","(f(f(fn)))"));
      $line=13;
      strings_0=$fix($opUnionY(strings_0,GCollections.asSet("((((((+v   v)v)v)v)v)v)","(((n).(fn)).(Lvvv))","(fffn)"," ")));
      $line=24;
      Object simbols=$fix(GCollections.asSet('+','-','*','='));
      $line=25;
      Object Q=$fix(GCollections.asSet("A","B","C"));
      $line=26;
      Object \u03A3=$fix($opUnionY(GCollections.asSet('S','N','C','n','v','(',')','F','f','L','.',' ','\n'),simbols));
      $line=27;
      Object \u0393=$fix($opUnionY(\u03A3,GCollections.asSet('$','T','A','E','O','I','M','V','W')));
      $line=28;
      Object q_0=$fix("A");
      $line=29;
      Object F=$fix(GCollections.asSet("B"));
      $line=30;
      M=$cast(GPushdownAutomaton.class,$fix($invokeConstructor(GPushdownAutomaton.class,new Object[]{Q,\u03A3,\u0393,q_0,F})));
      $line=31;
      $invokeMethod(NewFile.class,"push",true,null,new Object[]{"A","B","","$"});
      $line=32;
      $invokeMethod(NewFile.class,"pop",true,null,new Object[]{"B","C","","$"});
      $line=33;
      $invokeMethod(NewFile.class,"ct",true,null,new Object[]{"$","T"});
      $line=35;
      $invokeMethod(NewFile.class,"ct",true,null,new Object[]{"T","TE"});
      $line=37;
      $invokeMethod(NewFile.class,"ct",true,null,new Object[]{"T","T)Wf("});
      $line=38;
      $invokeMethod(NewFile.class,"ct",true,null,new Object[]{"T","T)MLf("});
      $line=40;
      $invokeMethod(NewFile.class,"ct",true,null,new Object[]{"T",")T)M(fF("});
      $line=41;
      $invokeMethod(NewFile.class,"ct",true,null,new Object[]{"T","T)ML("});
      $line=42;
      $invokeMethod(NewFile.class,"ct",true,null,new Object[]{"T","T)T.T("});
      $line=43;
      $invokeMethod(NewFile.class,"ct",true,null,new Object[]{"T","T)O("});
      $line=44;
      $invokeMethod(NewFile.class,"ct",true,null,new Object[]{"T","T)I("});
      $line=45;
      $invokeMethod(NewFile.class,"pop",true,null,new Object[]{"B","B","","T"});
      $line=47;
      $invokeMethod(NewFile.class,"ct",true,null,new Object[]{"A","E"});
      $line=48;
      $invokeMethod(NewFile.class,"ct",true,null,new Object[]{"A","S"});
      $line=49;
      $invokeMethod(NewFile.class,"ct",true,null,new Object[]{"A","C"});
      $line=50;
      $invokeMethod(NewFile.class,"ct",true,null,new Object[]{"A","N"});
      $line=52;
      $invokeMethod(NewFile.class,"ct",true,null,new Object[]{"E","n"});
      $line=53;
      $invokeMethod(NewFile.class,"ct",true,null,new Object[]{"E","v"});
      $line=55;
      $invokeMethod(NewFile.class,"ct",true,null,new Object[]{"O","VV+"});
      $line=56;
      $invokeMethod(NewFile.class,"ct",true,null,new Object[]{"O","VV-"});
      $line=57;
      $invokeMethod(NewFile.class,"ct",true,null,new Object[]{"O","VV*"});
      $line=58;
      $invokeMethod(NewFile.class,"ct",true,null,new Object[]{"O","VV="});
      $line=60;
      $invokeMethod(NewFile.class,"ct",true,null,new Object[]{"V","T"});
      $line=61;
      $invokeMethod(NewFile.class,"ct",true,null,new Object[]{"V","f"});
      $line=63;
      $invokeMethod(NewFile.class,"ct",true,null,new Object[]{"W","WV"});
      $line=64;
      $invokeMethod(NewFile.class,"pop",true,null,new Object[]{"B","B","","W"});
      $line=67;
      $invokeMethod(NewFile.class,"ct",true,null,new Object[]{"I","IT"});
      $line=68;
      $invokeMethod(NewFile.class,"ct",true,null,new Object[]{"I","IA"});
      $line=69;
      $invokeMethod(NewFile.class,"pop",true,null,new Object[]{"B","B","","I"});
      $line=71;
      $invokeMethod(NewFile.class,"ct",true,null,new Object[]{"M","MA"});
      $line=72;
      $invokeMethod(NewFile.class,"pop",true,null,new Object[]{"B","B","","M"});
      $line=74;
      simbols=$fix(GCollections.asSet('+','-','*','='));
      $line=75;
      \u03A3=$fix($opUnionY(GCollections.asSet('S','N','C','n','v','(',')','F','f','L','.'),simbols));
      $line=77;
      $invokeMethod(NewFile.class,"pop",true,null,new Object[]{"B","B","+","+"});
      $line=78;
      $invokeMethod(NewFile.class,"pop",true,null,new Object[]{"B","B","-","-"});
      $line=79;
      $invokeMethod(NewFile.class,"pop",true,null,new Object[]{"B","B","*","*"});
      $line=80;
      $invokeMethod(NewFile.class,"pop",true,null,new Object[]{"B","B","=","="});
      $line=81;
      $invokeMethod(NewFile.class,"pop",true,null,new Object[]{"B","B","S","S"});
      $line=82;
      $invokeMethod(NewFile.class,"pop",true,null,new Object[]{"B","B","N","N"});
      $line=83;
      $invokeMethod(NewFile.class,"pop",true,null,new Object[]{"B","B","C","C"});
      $line=84;
      $invokeMethod(NewFile.class,"pop",true,null,new Object[]{"B","B","n","n"});
      $line=85;
      $invokeMethod(NewFile.class,"pop",true,null,new Object[]{"B","B","v","v"});
      $line=86;
      $invokeMethod(NewFile.class,"pop",true,null,new Object[]{"B","B","(","("});
      $line=87;
      $invokeMethod(NewFile.class,"pop",true,null,new Object[]{"B","B",")",")"});
      $line=88;
      $invokeMethod(NewFile.class,"pop",true,null,new Object[]{"B","B","F","F"});
      $line=89;
      $invokeMethod(NewFile.class,"pop",true,null,new Object[]{"B","B","f","f"});
      $line=90;
      $invokeMethod(NewFile.class,"pop",true,null,new Object[]{"B","B","L","L"});
      $line=91;
      $invokeMethod(NewFile.class,"pop",true,null,new Object[]{"B","B",".","."});
      $line=93;
      $invokeMethod(NewFile.class,"ignore",true,null,new Object[]{" "});
      $line=94;
      $invokeMethod(NewFile.class,"ignore",true,null,new Object[]{"\n"});
      $line=98;
      Object input_coder=$fix($invokeMethod(NewFile.class,"elements",true,null,new Object[]{((gold.structures.automaton.GPushdownAutomaton)M).getInputAlphabet()}));
      $line=100;
      while (true) {
        if (!($bool(true))) break;
        $line=101;
        System.out.println($message(new Object[]{"\nInput: (Enter for example - 0 to exit)"}));
        $line=102;
        Object string=$fix(((java.util.Scanner)sc).nextLine());
        $line=103;
        if ($opEqualY(string,"0")) {
          $line=104;
          System.out.println($message(new Object[]{"bye ..."}));
          $line=105;
          break;
        }
        else {
          $line=106;
          if (!$opEqualY(string,"")) {
            $line=107;
            strings=$fix(GCollections.asSet(string));
          }
          else {
            $line=109;
            strings=$fix(strings_0);
          }
        }
        $line=114;
        for (int a=$int(0); a<=$int($opSubtrY($opAbsolY(strings),1)); a++) {
          $line=115;
          string=$fix($getArrayValue(strings,new Object[]{a}));
          $line=116;
          if (!$bool($opSbsetY($invokeMethod(NewFile.class,"chars",true,null,new Object[]{string}),input_coder))) {
            $line=117;
            System.out.println($message(new Object[]{$opAdditY("Input contains invalid symbols: ",$opDiffeY($invokeMethod(NewFile.class,"chars",true,null,new Object[]{string}),input_coder))}));
          }
          else {
            $line=119;
            System.out.println($message(new Object[]{$opAdditY($opAdditY($opAdditY("\nInput ",a),": "),$getArrayValue(strings,new Object[]{a}))}));
            $line=120;
            System.out.println($message(new Object[]{((gold.structures.automaton.GPushdownAutomaton)M).acceptsString($cast(java.lang.String.class,$getArrayValue(strings,new Object[]{a})))}));
          }
        }
      }
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,NewFile.class,"main",$line);
    }
  }
  public static Object ct(Object op1, Object op2) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=131;
      $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("B","B",$cast(java.lang.String.class,"")),new Object[]{op1,op2});
      $line=132;
      $result="";
      if (true) break $try;
      $line=133;
      $rethrow(new RuntimeException("The function \"ct(op1:Object,op2:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,NewFile.class,"ct",$line);
    }
    return $result;
  }
  public static Object push(Object a, Object b, Object c, Object op) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=136;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(a,b,$cast(java.lang.String.class,c)),new Object[]{op});
      $line=137;
      $result="";
      if (true) break $try;
      $line=138;
      $rethrow(new RuntimeException("The function \"push(a:Object,b:Object,c:Object,op:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,NewFile.class,"push",$line);
    }
    return $result;
  }
  public static Object pop(Object a, Object b, Object c, Object op) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=141;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(a,b,$cast(java.lang.String.class,c)),new Object[]{op});
      $line=142;
      $result="";
      if (true) break $try;
      $line=143;
      $rethrow(new RuntimeException("The function \"pop(a:Object,b:Object,c:Object,op:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,NewFile.class,"pop",$line);
    }
    return $result;
  }
  public static Object ignore(Object op) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=146;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta("B","B",$cast(java.lang.String.class,op)),new Object[]{});
      $line=147;
      $result="";
      if (true) break $try;
      $line=148;
      $rethrow(new RuntimeException("The function \"ignore(op:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,NewFile.class,"ignore",$line);
    }
    return $result;
  }
}
